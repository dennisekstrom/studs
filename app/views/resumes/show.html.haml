- active_menu :resumes

.column.general
  %h2.section.title<
    = @resume.name
    - if can? :edit, @resume
      = link_to t('actions.edit'), [:edit, @resume], :class => :action

  %dl.section.credentials
    = attribute_definition :masters, t_masters(@resume.masters)
    = attribute_definition :birthdate, t('.birthdate', date: l(@resume.birthdate), age: @resume.person_age)
    = attribute_definition :email, mail_to(@resume.email)
    = attribute_definition :phone, @resume.phone

  - if @resume.presentation.present?
    .section.presentation
      %h3= t_attribute :resume, :presentation
      .body= paragraphize @resume.presentation

  .section.skills
    %h3= t_attribute :resume, :skills
    %ul.tags
      - @resume.skills.each do |s|
        %li= link_to s, resumes_path(s: s.name), :class => :tag

.column.experiences
  - if can?(:edit, @resume)
    %h2= link_to t_model_action(:experience, :add), [:new, @resume, :experience], :class => :action
  - experiences = @resume.experiences_by_kind
  - Experience::KINDS.each do |kind|
    - next unless experiences.include?(kind)
    .section{ :class => kind }
      %h3= t_experience_kind(kind)
      %ul.experiences
        - experiences[kind].each do |exp|
          %li
            %h4.title<
              = exp.title
              - if can? :edit, exp
                = link_to t('actions.edit'), [:edit, @resume, exp], :class => :action
            %p.at<
              %span.organization= exp.organization
              - if exp.location.present?
                %span.location (#{exp.location})
            %p.duration= exp.duration
            %p.description= exp.description

